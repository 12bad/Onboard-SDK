# *  @Copyright (c) 2016-2017 DJI
# *
# * Permission is hereby granted, free of charge, to any person obtaining a copy
# * of this software and associated documentation files (the "Software"), to deal
# * in the Software without restriction, including without limitation the rights
# * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# * copies of the Software, and to permit persons to whom the Software is
# * furnished to do so, subject to the following conditions:
# *
# * The above copyright notice and this permission notice shall be included in
# * all copies or substantial portions of the Software.
# *
# * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# * SOFTWARE.
# *
# *

cmake_minimum_required(VERSION 2.8)
project(djiosdk-mission-sample)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread -g -O0")

FILE(GLOB SOURCE_FILES
        ${CMAKE_CURRENT_SOURCE_DIR}/../common/dji_linux_environment.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/../common/dji_linux_helpers.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/../hal/*.c
        ${CMAKE_CURRENT_SOURCE_DIR}/../osal/*.c
        )

add_executable(${PROJECT_NAME}
        ${CMAKE_CURRENT_SOURCE_DIR}/../common/dji_linux_environment.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/../common/dji_linux_helpers.cpp
        ${SOURCE_FILES}
        main.cpp
        mission_sample.cpp)

target_link_libraries(${PROJECT_NAME} ${OSDK_CORE_LIB}/lib/libdjiosdk-core.a)
target_link_libraries(${PROJECT_NAME} ${ADVANCED_SENSING_LIB}/lib/libadvanced-sensing.a)
target_link_libraries(${PROJECT_NAME} ${LIBUSB_1_LIBRARIES})
target_link_libraries(${PROJECT_NAME} ${FFMPEG_LIBRARIES})
if(WAYPT2_CORE)
#waypoint v2
add_executable(djiosdk-waypoint-v2-sample
          ${CMAKE_CURRENT_SOURCE_DIR}/../common/dji_linux_environment.cpp
          ${CMAKE_CURRENT_SOURCE_DIR}/../common/dji_linux_helpers.cpp
          ${CMAKE_CURRENT_SOURCE_DIR}/../osal/osdkosal_linux.c
          ${CMAKE_CURRENT_SOURCE_DIR}/../hal/osdkhal_linux.c
          waypoint_v2_main.cpp
          waypoint_v2_sample.cpp)

target_link_libraries(djiosdk-waypoint-v2-sample ${OSDK_CORE_LIB}/lib/libdjiosdk-core.a)
target_include_directories(djiosdk-waypoint-v2-sample PUBLIC
        $<BUILD_INTERFACE:${WAYPT2_CORE_INCLUDE_DIRS}>)
target_link_libraries(djiosdk-waypoint-v2-sample PUBLIC
        ${WAYPT2_CORE_LIBRARY}
     #   ${SDK_COMMON_LIBRARY}
        ${DJI_PROTOBUF_LIBRARY}
        ${WAYPT2_INTERFACE_LIBRARY}
        )
endif(WAYPT2_CORE)
